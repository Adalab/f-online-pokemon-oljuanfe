{"version":3,"sources":["components/SearchBox.js","components/PokemonCard.js","components/PokemonList.js","components/PokemonDetail.js","components/App.js","index.js"],"names":["SearchBox","_this$props","this","props","handleFilterPokemon","valueOnSearchBox","react_default","a","createElement","className","htmlFor","type","name","id","placeholder","value","onChange","Component","PokemonCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","pokemonSpecies","undefined","askForEvolution","bind","assertThisInitialized","_this2","species","pokemonInfo","fetch","url","then","response","json","setState","types","sprites","src","front_default","alt","map","eachType","key","slot","evolves_from_species","PokemonList","data","Link","to","concat","components_PokemonCard","PokemonDetail","pokemonEvolutionChain","askPokemonEvolutionChain","askPokemonSpecies","urlSpecies","_this3","urlEvolutionChain","evolution_chain","match","pokemonData","primaryPokemon","firstPokemonEvolution","secondPokemonEvolution","_pokemonEvolutionChai","chain","evolves_to","length","params","pokemonId","parseInt","filter","pokemon","back_default","height","weight","abilities","pokemonAbilities","ability","App","filteredByNameData","askForPokemons","i","push","sort","b","toConsumableArray","event","inputValue","currentTarget","filteredByName","toLowerCase","includes","dataToList","_this$state","Switch","Route","exact","path","render","react","components_SearchBox","components_PokemonList","components_PokemonDetail","ReactDOM","HashRouter","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.e85e5935.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SearchBox extends Component {\n  render() {\n    const {\n      handleFilterPokemon,\n      valueOnSearchBox\n    } = this.props;\n    return (\n      <div className=\"search-box\">\n        <label htmlFor=\"searchPokemon\"></label>\n        <input \n          className=\"search-input\"\n          type=\"text\" \n          name=\"searchPokemon\" \n          id=\"searchPokemon\" \n          placeholder=\"Filtra pokemons por nombre...\"\n          value={valueOnSearchBox}\n          onChange={handleFilterPokemon}\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default SearchBox;\n","import React, { Component } from 'react';\n\nclass PokemonCard extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      pokemonSpecies: undefined,\n    }\n    this.askForEvolution = this.askForEvolution.bind(this);\n  }\n\n  componentDidMount () {\n    this.askForEvolution ();\n  }\n\n  askForEvolution() {\n    const {species} = this.props.pokemonInfo;\n    fetch(species.url)\n    .then((response) => {\n      return response.json();\n    })\n    .then((json) => {\n      return this.setState({pokemonSpecies: json });\n    })\n  }\n\n  render() {\n    const {pokemonInfo} = this.props;\n    const {\n      id,\n      types,\n      name,\n      sprites\n    } = pokemonInfo;\n    return (\n      <div className=\"pokemon-card\">\n        <div className=\"pokemon-image-id\">\n          <img src={sprites.front_default} alt={name} className=\"pokemon-picture\"/>\n          <p className=\"pokemon-id\">id / {id}</p>\n        </div>\n        <div className=\"pokemon-info\">\n          <p className=\"pokemon-name\">{name}</p>\n          <ul className=\"type-list\">\n            {\n              types.map(eachType => {\n                return(\n                  <li key={eachType.slot} className=\"pokemon-type\">\n                    {eachType.type.name}\n                  </li>\n                );\n              })\n            }\n          </ul>\n          <div className={\n            (this.state.pokemonSpecies!==undefined)\n                ?(this.state.pokemonSpecies.evolves_from_species!==null?\"pokemon-evolution\":\"hidden\")\n                :\"hidden\"\n              }\n          >\n            <p className=\"evolution-first-paragraph\">Evoluciona de:</p>\n            <p className=\"evolution-second-paragraph\">\n            {\n              (this.state.pokemonSpecies!==undefined)\n                ?(this.state.pokemonSpecies.evolves_from_species!==null?this.state.pokemonSpecies.evolves_from_species.name:'Este pokemon no tiene evolución')\n                :'Este pokemon no evoluciona de nadie'\n            }\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PokemonCard;\n","import React, { Component } from 'react';\nimport PokemonCard from './PokemonCard';\nimport { Link } from 'react-router-dom';\n\nclass PokemonList extends Component {\n  render() {\n    const {data} = this.props;\n    return (\n      <div className=\"pokemon-wrapper\">\n        <ul className=\"pokemon-list\">\n          {\n            data.map(pokemonInfo =>{\n              const {id} = pokemonInfo;\n              return (\n                <li key = {id} className=\"pokemon-item-list\">\n                <Link to={`/pokemon/${id}`} className=\"link-router\">\n                  <PokemonCard pokemonInfo = {pokemonInfo} />\n                </Link>\n                  \n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default PokemonList;\n","import React, { Component } from 'react';\nimport { Link} from 'react-router-dom';\n\nclass PokemonDetail extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      pokemonSpecies: undefined,\n      pokemonEvolutionChain: undefined,\n    };\n    this.askPokemonEvolutionChain = this.askPokemonEvolutionChain.bind(this);\n    this.askPokemonSpecies = this.askPokemonSpecies.bind(this);\n  }\n\n  askPokemonSpecies (urlSpecies) {\n    fetch(urlSpecies)\n    .then((response) => {\n      return response.json();\n    })\n    .then((json) => {\n      return (this.setState({pokemonSpecies: json }), this.askPokemonEvolutionChain());\n    })\n  }\n\n  askPokemonEvolutionChain() {\n    if (this.state.pokemonSpecies!==undefined){\n      let urlEvolutionChain = this.state.pokemonSpecies.evolution_chain.url;\n      fetch(urlEvolutionChain)\n      .then((response) => {\n        return response.json();\n      })\n      .then((json) => {\n        return (\n          this.setState({pokemonEvolutionChain: json })\n        );\n      })\n    }\n  }\n\n  render() {\n    const{\n      match,\n      pokemonData,\n    } = this.props;\n    const {pokemonEvolutionChain} = this.state;\n    let primaryPokemon= '' ;\n    let firstPokemonEvolution = '' ;\n    let secondPokemonEvolution = '' ;\n    if (pokemonEvolutionChain !== undefined ) {\n      const {\n        evolves_to,\n        species,\n      } = pokemonEvolutionChain.chain;\n      primaryPokemon = species.name;\n      firstPokemonEvolution = evolves_to[0].species.name;\n      if (evolves_to[0].evolves_to.length > 0){\n        secondPokemonEvolution = evolves_to[0].evolves_to[0].species.name;\n      }\n      \n    }\n    const {params} = match;\n    const pokemonId = parseInt(params.id);\n    let pokemonChosen = pokemonData.filter((pokemon) => {\n      return pokemon.id === pokemonId;\n    });\n    let pokemonInfo = pokemonChosen[0];\n    if (pokemonInfo !== undefined && this.state.pokemonSpecies === undefined) {\n      this.askPokemonSpecies(pokemonInfo.species.url);\n    }\n    \n    \n    return (\n      <div className=\"pokemon-detail-wrapper\">\n        <div className=\"pokemon-detail-info-images\">\n          <div className=\"pokemon-detail-images\">\n            <img \n              src={pokemonInfo!==undefined?pokemonInfo.sprites.front_default:'No data'} \n              alt={pokemonInfo!==undefined?pokemonInfo.name:'No data'}\n              className=\"pokemon-front\"\n            />\n            <img \n              src={pokemonInfo!==undefined?pokemonInfo.sprites.back_default:'No data'} \n              alt={pokemonInfo!==undefined?pokemonInfo.name:'No data'}\n              className=\"pokemon-back\"\n            />\n          </div>         \n          <div className=\"pokemon-detail-info\">\n            <p className=\"pokemon-detail-name\">\n              {pokemonInfo!==undefined?pokemonInfo.name:'No data'}\n            </p>\n            <ul className=\"pokemon-detail-list\">\n              <li className=\"pokemon-detail-item pokemon-detail-height\">\n                <p className=\"pokemon-detail-info-paragraph\">\n                  Altura:\n                </p>  \n                <p>\n                  {pokemonInfo!==undefined?pokemonInfo.height:'No data'}\n                </p>\n              </li>\n              <li className=\"pokemon-detail-item pokemon-detail-weigth\">\n                <p className=\"pokemon-detail-info-paragraph\">\n                  Peso:\n                </p>\n                <p>\n                  {pokemonInfo!==undefined?pokemonInfo.weight:'No data'}\n                </p>  \n              </li>\n              <li className=\"pokemon-detail-item pokemon-detail-abilities\">\n                  \n                <ul className=\"pokemon-detail-abilities-list\">\n                  <p className=\"pokemon-detail-info-paragraph\">\n                    Habilidades:\n                  </p>\n                  {pokemonInfo!==undefined\n                    ?(pokemonInfo.abilities.map((pokemonAbilities) => {\n                      const {\n                        ability,\n                        slot\n                      } = pokemonAbilities;\n                      return (\n                        <li \n                          key={slot} \n                          className=\"pokemon-detail-abilities-item\"\n                        >\n                          {ability.name}\n                        </li>\n                      );\n                      }))\n                    : 'No data'}\n                </ul>\n              </li>\n              <li className=\"pokemon-detail-item pokemon-detail-evolutions\"> \n                <ul className=\"pokemon-detail-evolutions-list\">\n                  <p className=\"pokemon-detail-info-paragraph\">\n                    Evoluciones:\n                  </p>\n                  <li>\n                    {primaryPokemon} &#10153; {firstPokemonEvolution}\n                  </li>\n                  <li className={secondPokemonEvolution!==''?'':'hidden'}>\n                    {firstPokemonEvolution} &#10153; {secondPokemonEvolution}\n                  </li>\n                </ul>\n              </li>\n            </ul>\n          </div>\n          \n        </div>\n        <Link \n          to=\"/\" \n          className=\"btn-back\" \n        >\n          Volver al listado\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default PokemonDetail;\n","import React, { Component, Fragment } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SearchBox from './SearchBox';\nimport PokemonList from './PokemonList';\nimport PokemonDetail from './PokemonDetail';\nimport '../stylesheets/App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: [],\n      filteredByNameData: [],\n      valueOnSearchBox: '',\n    };\n    this.askForPokemons = this.askForPokemons.bind(this);\n    this.handleFilterPokemon = this.handleFilterPokemon.bind(this);\n  }\n\n  componentDidMount () {\n    let pokemonData = [];\n    for(let i = 0; i < 25; i++ ){\n      this.askForPokemons(i,pokemonData);\n    }\n  }\n\n  askForPokemons (i,pokemonData) {    \n    let pokemonNumber = i + 1;\n    fetch(`https://pokeapi.co/api/v2/pokemon/${pokemonNumber}/`)\n    .then((response) => {\n      return response.json();\n    })\n    .then((json) => {\n      pokemonData.push(json);\n      pokemonData.sort((a,b) => a.id-b.id);\n      return this.setState({data: [...pokemonData]});\n    })\n  }\n\n  handleFilterPokemon (event) {\n    const {data} = this.state;\n    let inputValue = event.currentTarget.value;\n    let filteredByName = data.filter((pokemon) => {\n      const name = pokemon.name.toLowerCase();\n      return name.includes(inputValue);\n    });\n    this.setState(\n      {\n        filteredByNameData: filteredByName,\n        valueOnSearchBox: inputValue\n      }\n    );\n  }\n\n  render() {\n    let dataToList ;\n    const{\n      data,\n      filteredByNameData,\n      valueOnSearchBox,\n    } = this.state;\n    if (filteredByNameData.length===0){\n      dataToList = data;\n    } else {\n      dataToList = filteredByNameData;\n    }\n    return (\n      <div>\n        <header className=\"header\">\n        </header>\n        <main>\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={\n              (props) => (\n                <Fragment>\n                  <SearchBox\n                    handleFilterPokemon={this.handleFilterPokemon}\n                    valueOnSearchBox={valueOnSearchBox}\n                  />\n                  <PokemonList\n                    data={dataToList}\n                    match={props.match}\n                  />\n                </Fragment>\n              )\n            }\n          />\n          <Route\n            exact\n            path='/pokemon/:id'\n            render={\n              (props) => <PokemonDetail\n                            match={props.match}\n                            pokemonData={dataToList}\n                          />\n            }\n          />\n        </Switch>\n      </main>\n      <footer className=\"footer\"></footer>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <HashRouter>\n    <App /> \n  </HashRouter>, \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}